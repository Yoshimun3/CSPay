{"version":3,"sources":["firebase.js","Plans.js","AdminLogin.js","Admin.js","AuthContext.js","login.js","Repair.js","UpdateInfo.js","signup.js","Payment.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","Plans","plans","setPlans","useState","headerBgUrl","setHeaderBgUrl","selectedPlan","setSelectedPlan","logoUrl","setLogoUrl","planPics","setPlanPics","useEffect","unsubscribe","onSnapshot","collection","querySnapshot","allFetchedPlans","docs","map","doc","id","data","error","console","logoRef","ref","headerBgRef","getDownloadURL","then","url","catch","planPicsRef","listAll","result","fetchUrls","items","itemRef","Promise","all","urls","React","createElement","className","href","src","alt","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","Link","to","style","backgroundImage","backgroundSize","backgroundPosition","color","length","role","plan","index","key","onClick","Name","Speed","Price","closeSelectedPlan","state","Date","getFullYear","AdminLogin","email","setEmail","password","setPassword","setError","navigate","useNavigate","maxWidth","width","position","top","left","cursor","window","history","back","display","justifyContent","alignItems","height","onSubmit","async","e","preventDefault","userCredential","signInWithEmailAndPassword","uid","user","adminDocRef","getDoc","exists","signOut","err","message","htmlFor","value","onChange","target","placeholder","required","Admin","showAlert","setShowAlert","tab","setTab","receipts","setReceipts","repairRequests","setRepairRequests","installations","setInstallations","subscribers","setSubscribers","newPlan","setNewPlan","newEmployee","setNewEmployee","name","installationStatus","setInstallationStatus","searchTerm","setSearchTerm","filteredSubscribers","filter","subscriber","toLowerCase","includes","inventory","setInventory","loading","setLoading","unsubscribePlans","snapshot","plansData","log","unsubscribeReceipts","receiptsData","expanded","unsubscribeInstallations","installationsData","unsubscribeSubscribers","subscribersData","unsubscribeRepairRequests","repairRequestsData","fetchedInventory","getDocs","fetchInventory","newMaterial","setNewMaterial","quantity","updateInventory","newQuantity","docRef","updateDoc","prev","item","alert","tabName","charAt","toUpperCase","slice","class","addDoc","parseInt","contactNumber","request","imageUrl","maxHeight","objectFit","reportedBy","repairType","details","timestamp","seconds","toDateString","status","find","r","requestId","completedRepairRef","resolvedDate","Timestamp","fromDate","setDoc","merge","deleteDoc","handleResolveRepairRequest","tabIndex","aria-labelledby","aria-hidden","data-bs-dismiss","receipt","receiptURL","subscriberName","receiptId","p","planName","sortedPlans","sort","a","b","planIndex","findIndex","priority","installationDays","Math","floor","random","scheduledDate","setDate","getDate","installationRef","confirmed","installationDate","rejectedReceiptsRef","rejectedReceiptsQuery","query","where","rejectedReceiptsSnapshot","empty","forEach","confirmReceipt","rejectionReason","prompt","rejectedReceiptData","rejectionDate","handleRejectReceipt","setTimeout","planId","handleRemovePlan","createUserWithEmailAndPassword","userData","collectionRef","Fragment","installation","toDate","toString","i","installationId","completedInstallationData","completionDate","completedRef","installationDocRef","completeInstallation","AuthContext","createContext","AuthProvider","_ref","children","setUser","onAuthStateChanged","firebaseUser","Provider","login","logout","useAuth","context","useContext","Error","Login","Repair","showForm","setShowForm","setRepairType","setDetails","image","setImage","uploading","setUploading","repairRequestsRef","q","repairs","handleBack","storageRef","now","uploadBytes","userId","rows","accept","files","disabled","handleAddRequest","toLocaleDateString","UpdateInfo","_location$state","location","useLocation","setName","setContactNumber","address","setAddress","subscribersRef","updates","Signup","acceptTerms","setAcceptTerms","margin","signupDate","planPrice","planSpeed","checked","rel","Modal","isOpen","onClose","content","isLoading","isImage","currentTarget","Payment","setReceipt","previewURL","setPreviewURL","modalContent","setModalContent","isModalOpen","setIsModalOpen","setIsLoading","isImageModal","setIsImageModal","setSubscriberName","gcashImageURL","setGCashImageURL","subscriberDocRef","subscriberDocSnap","subscriberData","displayName","fetchSubscriberName","gcashRef","fetchGCashImage","handleGCashImageClick","receiptRef","downloadURL","serverTimestamp","file","startsWith","size","reader","FileReader","onload","readAsDataURL","hidden","Home","setSubscriberData","showDropdown","setShowDropdown","setRejectionReason","warn","docData","completedInstallationsRef","completedInstallationsQuery","reason","completedInstallationsSnapshot","_rejectedReceiptsSnap","fetchSubscriberData","right","toggleDropdown","handleAskForRepair","handleRetryPayment","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4e200e32.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from \"firebase/storage\"; // Import Storage\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBeY4TGl9jUU8ybf2SJOAH2EzBiWI8j6no\",\r\n    authDomain: \"testing-9e3ea.firebaseapp.com\",\r\n    projectId: \"testing-9e3ea\",\r\n    storageBucket: \"testing-9e3ea.appspot.com\",\r\n    messagingSenderId: \"617734361837\",\r\n    appId: \"1:617734361837:web:e31f1daa7c6b92d602b2e4\"\r\n  };\r\n\r\n// Initialize Firebase and Authentication\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst storage = getStorage(app); // Initialize Firebase Storage\r\n\r\nexport { auth, db, storage }; // Export storage as well\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  collection,\r\n  onSnapshot,\r\n  getDocs,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  getDownloadURL,\r\n  listAll,\r\n} from \"firebase/storage\";\r\nimport { db } from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Plans.css\";\r\n\r\nconst Plans = () => {\r\n  const [plans, setPlans] = useState([]);\r\n  const [headerBgUrl, setHeaderBgUrl] = useState(null); // Header background image URL\r\n  const [selectedPlan, setSelectedPlan] = useState(null);\r\n  const [logoUrl, setLogoUrl] = useState(null); // State for the logo URL\r\n  const [planPics, setPlanPics] = useState([]); // State for the plan images\r\n\r\n  useEffect(() => {\r\n    // Fetch the internet plans from Firestore\r\n    const unsubscribe = onSnapshot(\r\n      collection(db, \"internetPlans\"),\r\n      (querySnapshot) => {\r\n        const allFetchedPlans = querySnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setPlans(allFetchedPlans);\r\n      },\r\n      (error) => console.error(\"Error fetching plans:\", error)\r\n    );\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch the logo from Firebase Storage\r\n    const storage = getStorage();\r\n    const logoRef = ref(storage, \"internetnijohn.png\");\r\n    const headerBgRef = ref(storage, \"internet.jpg\");\r\n    getDownloadURL(logoRef)\r\n      .then((url) => {\r\n        setLogoUrl(url); // Set the retrieved URL to the state\r\n       \r\n      })\r\n      getDownloadURL(headerBgRef)\r\n    .then((url) => {\r\n      setHeaderBgUrl(url); // Set the URL for the header background\r\n    })\r\n      \r\n      \r\n      .catch((error) => console.error(\"Error fetching logo:\", error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch all images from the plan-pics folder in Firebase Storage\r\n    const storage = getStorage();\r\n    const planPicsRef = ref(storage, \"plan-pics\");\r\n\r\n    listAll(planPicsRef)\r\n      .then((result) => {\r\n        const fetchUrls = result.items.map((itemRef) =>\r\n          getDownloadURL(itemRef)\r\n        );\r\n\r\n        Promise.all(fetchUrls).then((urls) => setPlanPics(urls));\r\n      })\r\n      .catch((error) => console.error(\"Error fetching plan pics:\", error));\r\n  }, []);\r\n\r\n  const closeSelectedPlan = () => {\r\n    setSelectedPlan(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"plans-page\">\r\n      {/* Navbar */}\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {logoUrl && (\r\n              <img\r\n                src={logoUrl}\r\n                alt=\"Internet ni Juan Logo\"\r\n                className=\"navbar-logo\"\r\n              />\r\n            )}\r\n            CSPay\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ms-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/login\" className=\"nav-link\">\r\n                  <i className=\"fas fa-user-large me-1\"></i> User Login\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Hero Section */}\r\n      <header className=\"bg-light text-center py-5\" style={{\r\n        backgroundImage: headerBgUrl ? `url(${headerBgUrl})` : \"none\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        color: \"white\",\r\n      }}>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4 fw-bold\" style={{ color: \"white\" }}>Explore Our Internet Plans</h1>\r\n          <p className=\"lead\">\r\n            Reliable, Fast, and Affordable Internet for Everyone!\r\n          </p>\r\n          <a href=\"#plans\" className=\"btn btn-primary btn-lg mt-3\">\r\n            View Plans\r\n          </a>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Internet Plans */}\r\n      <div id=\"plans\" className=\"container my-5\">\r\n        <div className=\"row\">\r\n          {plans.length === 0 ? (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n          ) : (\r\n            plans.map((plan, index) => (\r\n              <div className=\"col-md-4 mb-4\" key={plan.id}>\r\n                <div\r\n                  className={`card shadow-sm`}\r\n                  onClick={() => setSelectedPlan(plan)}\r\n                >\r\n                  <img\r\n                    src={planPics[index % planPics.length] || \"\"}\r\n                    className=\"card-img-top\"\r\n                    alt=\"Plan\"\r\n                  />\r\n                  <div className=\"card-body text-center\">\r\n                    <h3 className=\"card-title\">{plan.Name}</h3>\r\n                    <p className=\"card-text\">Speed: {plan.Speed} Mbps</p>\r\n                    <p className=\"card-text\">Price: ₱{plan.Price}</p>\r\n                    <button className=\"btn btn-outline-primary\">\r\n                      Select Plan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Selected Plan Modal */}\r\n      {selectedPlan && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <button\r\n              className=\"close-btn btn btn-danger btn-sm\"\r\n              onClick={closeSelectedPlan}\r\n            >\r\n              &times;\r\n            </button>\r\n            <h2 className=\"card-title text-center\">{selectedPlan.Name}</h2>\r\n            <p className=\"card-text\">Speed: {selectedPlan.Speed} Mbps</p>\r\n            <p className=\"card-text\">Price: ₱{selectedPlan.Price}</p>\r\n            <Link\r\n              to=\"/Signup\"\r\n              state={{ selectedPlan }}\r\n              className=\"btn btn-primary w-100\"\r\n            >\r\n              Apply Now!\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Footer */}\r\n      <footer className=\"bg-dark text-light py-4\">\r\n        <div className=\"container text-center\">\r\n          <Link to=\"/admin-login\" className=\"navbar-brand\">\r\n            <strong>\r\n              &copy; {new Date().getFullYear()} CSPay. All rights\r\n              reserved.\r\n            </strong>\r\n          </Link>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plans;\r\n","import React, { useState } from \"react\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, db } from \"./firebase\"; // Ensure this includes Firestore (db)\r\nimport { doc, getDoc } from \"firebase/firestore\"; // Firestore methods for querying\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate for navigation\r\n\r\nfunction AdminLogin() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate(); // Initialize navigate\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(null); // Clear any previous errors\r\n    try {\r\n      // Authenticate the user\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const { uid } = userCredential.user; // Get the user's UID\r\n      \r\n      // Check if the user is an admin\r\n      const adminDocRef = doc(db, \"admin\", uid); // Reference to the admin document\r\n      const adminDoc = await getDoc(adminDocRef);\r\n\r\n      if (adminDoc.exists()) {\r\n        // Admin verified, navigate to admin dashboard\r\n        navigate(\"/admin\");\r\n      } else {\r\n        // Not an admin, sign out and show error\r\n        setError(\"Access denied: Not an admin account.\");\r\n        await auth.signOut();\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to log in: \" + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex flex-column align-items-center justify-content-center vh-100\">\r\n      {/* Login Card */}\r\n      <div className=\"card shadow-lg p-4\" style={{ maxWidth: \"400px\", width: \"100%\" }}>\r\n        {/* Back Icon */}\r\n        <div\r\n          className=\"mb-3\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"20px\",\r\n            left: \"20px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => window.history.back()}\r\n        >\r\n          <i className=\"fas fa-arrow-left fa-lg text-secondary\"></i>\r\n        </div>\r\n\r\n        {/* Admin Login Title */}\r\n        <h2 className=\"text-center text-primary mb-4\">  {/* Centered User Icon */}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"10vh\",\r\n          }}\r\n        >\r\n          <i className=\"fas fa-user-shield fa-2x mb-3\"></i>\r\n        </div>Admin Login</h2>\r\n\r\n        {/* Login Form */}\r\n        <form onSubmit={handleLogin}>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              Admin Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              className=\"form-control\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Enter admin email\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"password\" className=\"form-label\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Enter password\"\r\n              required\r\n            />\r\n          </div>\r\n          {error && <p className=\"text-danger text-center\">{error}</p>}\r\n          <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport { collection, addDoc, deleteDoc, doc, onSnapshot, setDoc, query ,where, getDocs, updateDoc } from \"firebase/firestore\";\r\nimport { Timestamp } from \"firebase/firestore\";\r\nimport { signOut } from \"firebase/auth\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Bootstrap\r\nimport { auth } from \"./firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './Admin.css';\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nfunction Admin() {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [tab, setTab] = useState(\"users\");\r\n    const [plans, setPlans] = useState([]);\r\n    const [receipts, setReceipts] = useState([]);\r\n    const [repairRequests, setRepairRequests] = useState([]);\r\n    const [installations, setInstallations] = useState([]);\r\n    const [subscribers, setSubscribers] = useState([]);\r\n    const [newPlan, setNewPlan] = useState({ Name: \"\", Speed: \"\", Price: \"\" });\r\n    const [newEmployee, setNewEmployee] = useState({ name: \"\", email: \"\", role: \"employee\" });\r\n\r\n    const [installationStatus, setInstallationStatus] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [searchTerm, setSearchTerm] = useState(\"\"); // Search term state\r\n    const filteredSubscribers = subscribers?.filter(\r\n      (subscriber) =>\r\n        subscriber.name &&\r\n        subscriber.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    const [inventory, setInventory] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n  \r\n    useEffect(() => {\r\n      const unsubscribePlans = onSnapshot(\r\n          collection(db, \"internetPlans\"),\r\n          (snapshot) => {\r\n              const plansData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n              console.log(\"Plans data fetched:\", plansData); // Log fetched plans data\r\n              setPlans(plansData);\r\n          },\r\n          (error) => console.error(\"Error fetching plans:\", error) // Log errors if any\r\n      );\r\n  \r\n      const unsubscribeReceipts = onSnapshot(\r\n          collection(db, \"Receipts\"),\r\n          (snapshot) => {\r\n              const receiptsData = snapshot.docs.map(doc => ({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n                  expanded: false,\r\n              }));\r\n              console.log(\"Receipts data fetched:\", receiptsData); // Log fetched receipts data\r\n              setReceipts(receiptsData);\r\n          },\r\n          (error) => console.error(\"Error fetching receipts:\", error) // Log errors if any\r\n      );\r\n  \r\n      const unsubscribeInstallations = onSnapshot(\r\n          collection(db, \"Installations\"),\r\n          (snapshot) => {\r\n              const installationsData = snapshot.docs.map(doc => ({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n              }));\r\n              console.log(\"Installations data fetched:\", installationsData); // Log fetched installations data\r\n              setInstallations(installationsData);\r\n          },\r\n          (error) => console.error(\"Error fetching installations:\", error) // Log errors if any\r\n      );\r\n  \r\n      const unsubscribeSubscribers = onSnapshot(\r\n          collection(db, \"Subscribers\"),\r\n          (snapshot) => {\r\n              const subscribersData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n              console.log(\"Subscribers data fetched:\", subscribersData); // Log fetched subscribers data\r\n              setSubscribers(subscribersData);\r\n          },\r\n          (error) => console.error(\"Error fetching subscribers:\", error) // Log errors if any\r\n      );\r\n  \r\n      const unsubscribeRepairRequests = onSnapshot(\r\n          collection(db, \"RepairRequests\"),\r\n          (snapshot) => {\r\n              const repairRequestsData = snapshot.docs.map(doc => ({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n              }));\r\n              console.log(\"Repair requests data fetched:\", repairRequestsData); // Log fetched repair requests data\r\n              setRepairRequests(repairRequestsData);\r\n          },\r\n          (error) => console.error(\"Error fetching repair requests:\", error) // Log errors if any\r\n      );\r\n  \r\n      const fetchInventory = async () => {\r\n          try {\r\n              setLoading(true);\r\n              const querySnapshot = await getDocs(collection(db, \"inventory\"));\r\n              const fetchedInventory = querySnapshot.docs.map(doc => ({\r\n                  id: doc.id,\r\n                  ...doc.data(),\r\n              }));\r\n              console.log(\"Inventory data fetched:\", fetchedInventory); // Log fetched inventory data\r\n              setInventory(fetchedInventory);\r\n          } catch (error) {\r\n              console.error(\"Error fetching inventory:\", error); // Log errors if any\r\n          } finally {\r\n              setLoading(false);\r\n          }\r\n      };\r\n  \r\n      fetchInventory(); // Initial call to fetch inventory\r\n  \r\n      // Cleanup listeners and prevent memory leaks\r\n      return () => {\r\n          unsubscribePlans();\r\n          unsubscribeReceipts();\r\n          unsubscribeInstallations();\r\n          unsubscribeSubscribers();\r\n          unsubscribeRepairRequests();\r\n      };\r\n  }, []);\r\n  \r\n\r\n    // const handleResolveRequest = async (requestId) => {\r\n    //   try {\r\n    //     // Mark repair request as resolved\r\n    //     await updateDoc(doc(db, \"RepairRequests\", requestId), {\r\n    //       status: \"Resolved\",\r\n    //       resolvedDate: Timestamp.fromDate(new Date()),\r\n    //     });\r\n    //     alert(\"Repair request marked as resolved!\");\r\n    //   } catch (error) {\r\n    //     console.error(\"Error resolving repair request: \", error.message);\r\n    //     alert(\"Failed to mark repair request as resolved.\");\r\n    //   }\r\n    // };\r\n    const handleAddPlan = async (e) => {\r\n        e.preventDefault();\r\n        if (!newPlan.Name || !newPlan.Speed || !newPlan.Price) return alert(\"Please fill in all plan fields.\");\r\n        try {\r\n            await addDoc(collection(db, \"internetPlans\"), newPlan);\r\n            setNewPlan({ Name: \"\", Speed: \"\", Price: \"\" });\r\n            // Simulate adding a plan\r\n            console.log(\"Plan added successfully!\");\r\n\r\n            // Show success alert\r\n            setShowAlert(true);\r\n\r\n            // Hide the alert after 3 seconds (optional)\r\n            setTimeout(() => setShowAlert(false), 3000);\r\n        } catch (error) {\r\n            alert(\"Failed to add plan: \" + error.message);\r\n        }\r\n    };\r\n\r\n    const handleRemovePlan = async (planId) => {\r\n        try {\r\n            await deleteDoc(doc(db, \"internetPlans\", planId));\r\n            // Show success alert\r\n            setShowAlert(true);\r\n\r\n            // Hide the alert after 3 seconds (optional)\r\n            setTimeout(() => setShowAlert(false), 3000);\r\n        } catch (error) {\r\n            alert(\"Failed to remove plan: \" + error.message);\r\n        }\r\n    };\r\n\r\n    const handleCreateAccount = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        // Create user in Firebase Authentication\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth, \r\n          newEmployee.email, \r\n          newEmployee.password\r\n        );\r\n    \r\n        // Prepare the user object\r\n        const user = userCredential.user;\r\n    \r\n        // Prepare the data to be added to Firestore\r\n        const userData = {\r\n          name: newEmployee.name,\r\n          email: newEmployee.email,\r\n          role: newEmployee.role,\r\n          uid: user.uid, // Store the UID for reference\r\n        };\r\n    \r\n        // Determine the collection based on the role\r\n        const collectionRef = newEmployee.role === \"admin\" ? \"admin\" : \"Employees\";\r\n    \r\n        // Add user to Firestore (either Admin or Employee collection)\r\n        if (newEmployee.role === \"admin\") {\r\n          // Set the document ID to the UID for the admin account\r\n          await setDoc(doc(db, collectionRef, user.uid), userData);\r\n        } else {\r\n          // Add the employee to the Employees collection (Firestore auto-generates the document ID)\r\n          await addDoc(collection(db, collectionRef), userData);\r\n        }\r\n    \r\n        // Reset form\r\n        setNewEmployee({ name: \"\", email: \"\", password: \"\", role: \"employee\" });\r\n        alert(`${newEmployee.role.charAt(0).toUpperCase() + newEmployee.role.slice(1)} account created successfully!`);\r\n      } catch (error) {\r\n        alert(\"Failed to create account: \" + error.message);\r\n      }\r\n    };\r\n    const handleLogout = async () => {\r\n        try {\r\n            await signOut(auth);\r\n            alert(\"Successfully logged out!\");\r\n            navigate(\"/\");\r\n        } catch (err) {\r\n            console.error(\"Failed to log out: \", err.message);\r\n        }\r\n    };\r\n\r\n    const confirmReceipt = async (receiptId) => {\r\n      try {\r\n          // Find the receipt in the list of receipts\r\n          const receipt = receipts.find((r) => r.id === receiptId);\r\n          if (!receipt) return alert(\"Receipt not found.\");\r\n  \r\n          // Find the plan corresponding to the receipt\r\n          const plan = plans.find((p) => p.Name === receipt.planName);\r\n          if (!plan) return alert(\"Plan not found for the receipt.\");\r\n  \r\n          // Determine the priority and installation schedule\r\n          const sortedPlans = [...plans].sort((a, b) => b.Price - a.Price);\r\n          const planIndex = sortedPlans.findIndex((p) => p.Name === plan.Name);\r\n          const priority =\r\n              planIndex < sortedPlans.length / 3\r\n                  ? \"High\"\r\n                  : planIndex < (2 * sortedPlans.length) / 3\r\n                  ? \"Medium\"\r\n                  : \"Low\";\r\n  \r\n          const installationDays =\r\n              priority === \"High\"\r\n                  ? 1 + Math.floor(Math.random() * 3)\r\n                  : priority === \"Medium\"\r\n                  ? 4 + Math.floor(Math.random() * 4)\r\n                  : 8 + Math.floor(Math.random() * 7);\r\n  \r\n          const scheduledDate = new Date();\r\n          scheduledDate.setDate(scheduledDate.getDate() + installationDays);\r\n  \r\n          // Add the installation to the Installations collection\r\n          const installationRef = await addDoc(collection(db, \"Installations\"), {\r\n              ...receipt,\r\n              confirmed: true,\r\n              installationDate: Timestamp.fromDate(scheduledDate),\r\n              installationStatus: \"Scheduled\",\r\n              priority,\r\n          });\r\n  \r\n          // Update the newly created installation with its document ID\r\n          await setDoc(installationRef, { id: installationRef.id }, { merge: true });\r\n  \r\n          console.log(\r\n              \"Installation added to Installations collection with ID:\",\r\n              installationRef.id\r\n          );\r\n  \r\n          // Delete the receipt from the Receipts collection\r\n          await deleteDoc(doc(db, \"Receipts\", receiptId));\r\n          console.log(\"Receipt deleted from Receipts collection:\", receiptId);\r\n  \r\n          // Remove the user's record from the RejectedReceipts collection\r\n          const rejectedReceiptsRef = collection(db, \"RejectedReceipts\");\r\n          const rejectedReceiptsQuery = query(\r\n              rejectedReceiptsRef,\r\n              where(\"subscriberName\", \"==\", receipt.subscriberName)\r\n          );\r\n          const rejectedReceiptsSnapshot = await getDocs(rejectedReceiptsQuery);\r\n  \r\n          if (!rejectedReceiptsSnapshot.empty) {\r\n              rejectedReceiptsSnapshot.forEach(async (doc) => {\r\n                  await deleteDoc(doc.ref);\r\n                  console.log(\"Deleted from RejectedReceipts:\", doc.id);\r\n              });\r\n          }\r\n  \r\n          // Alert the user of successful receipt confirmation and scheduling\r\n          alert(\r\n              `Receipt confirmed! Installation scheduled for ${scheduledDate.toDateString()} (Priority: ${priority}).`\r\n          );\r\n      } catch (error) {\r\n          console.error(\"Error confirming receipt:\", error);\r\n          alert(\"Failed to confirm receipt: \" + error.message);\r\n      }\r\n  };\r\n  \r\n    \r\n    \r\n\r\n    const completeInstallation = async (installationId) => {\r\n        try {\r\n            // Step 1: Find the installation from the local state\r\n            const installation = installations.find((i) => i.id === installationId);\r\n            if (!installation) {\r\n                alert(\"Installation not found in state.\");\r\n                return;\r\n            }\r\n    \r\n            // Step 2: Add the installation to the CompletedInstallations collection\r\n            const completedInstallationData = {\r\n                ...installation,\r\n                completionDate: Timestamp.fromDate(new Date()), // Set the completion date\r\n                installationStatus: \"Completed\",\r\n            };\r\n            const completedRef = await addDoc(\r\n                collection(db, \"CompletedInstallations\"),\r\n                completedInstallationData\r\n            );\r\n            console.log(\r\n                \"Installation added to CompletedInstallations with ID:\",\r\n                completedRef.id\r\n            );\r\n    \r\n            // Step 3: Delete the installation from the Installations collection\r\n            const installationDocRef = doc(db, \"Installations\", installationId); // Reference the correct document\r\n            await deleteDoc(installationDocRef); // Delete the document\r\n            console.log(\r\n                `Installation with ID ${installationId} deleted from Installations collection.`\r\n            );\r\n    \r\n            // Step 4: Notify the user that the installation is complete\r\n            // Show success alert\r\n            setShowAlert(true);\r\n\r\n            // Hide the alert after 3 seconds (optional)\r\n            setTimeout(() => setShowAlert(false), 3000);\r\n        } catch (error) {\r\n            console.error(\"Error marking installation as complete:\", error);\r\n            alert(\"Failed to mark installation as complete: \" + error.message);\r\n        }\r\n    };\r\n    const handleRejectReceipt = async (receiptId) => {\r\n      try {\r\n        // Step 1: Find the receipt in the local state\r\n        const receipt = receipts.find((r) => r.id === receiptId);\r\n        if (!receipt) {\r\n          alert(\"Receipt not found.\");\r\n          return;\r\n        }\r\n    \r\n        // Step 2: Prompt the admin to provide a rejection reason\r\n        const rejectionReason = prompt(\"Please provide a reason for rejecting this receipt:\");\r\n        if (!rejectionReason) {\r\n          alert(\"Rejection reason is required.\");\r\n          return;\r\n        }\r\n    \r\n        // Step 3: Add the receipt to the RejectedReceipts collection\r\n        const rejectedReceiptData = {\r\n          ...receipt,\r\n          rejectionDate: Timestamp.fromDate(new Date()), // Add rejection timestamp\r\n          rejectionReason, // Add rejection reason\r\n        };\r\n        await addDoc(collection(db, \"RejectedReceipts\"), rejectedReceiptData);\r\n    \r\n        // Step 4: Delete the receipt from the Receipts collection\r\n        await deleteDoc(doc(db, \"Receipts\", receiptId));\r\n    \r\n        // Step 5: Notify the user\r\n        alert(\"Receipt rejected with the reason.\");\r\n      } catch (error) {\r\n        console.error(\"Error rejecting receipt:\", error);\r\n        alert(\"Failed to reject receipt: \" + error.message);\r\n      }\r\n    };\r\n    \r\n    const handleResolveRepairRequest = async (requestId) => {\r\n      try {\r\n        // Find the request in the list of repair requests\r\n        const request = repairRequests.find((r) => r.id === requestId);\r\n        if (!request) return alert(\"Repair request not found.\");\r\n    \r\n        // Add the repair request to the CompletedRepairs collection\r\n        const completedRepairRef = await addDoc(collection(db, \"CompletedRepairs\"), {\r\n          ...request,\r\n          resolvedDate: Timestamp.fromDate(new Date()), // Add resolved timestamp\r\n          status: \"Resolved\", // Mark as resolved\r\n        });\r\n    \r\n        // Update the newly created completed repair with its document ID\r\n        await setDoc(\r\n          completedRepairRef,\r\n          { id: completedRepairRef.id },\r\n          { merge: true }\r\n        );\r\n    \r\n        console.log(\r\n          \"Repair request added to CompletedRepairs collection with ID:\",\r\n          completedRepairRef.id\r\n        );\r\n    \r\n        // Delete the request from the RepairRequests collection\r\n        await deleteDoc(doc(db, \"RepairRequests\", requestId));\r\n        console.log(\"Repair request deleted from RepairRequests collection:\", requestId);\r\n    \r\n        // Notify the user of successful resolution\r\n        alert(\"Repair request resolved and moved to Completed Repairs.\");\r\n      } catch (error) {\r\n        console.error(\"Error resolving repair request:\", error);\r\n        alert(\"Failed to resolve repair request: \" + error.message);\r\n      }\r\n    };\r\n    \r\n    const [newMaterial, setNewMaterial] = useState({ name: \"\", quantity: 0 });\r\n\r\nconst handleAddMaterial = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    const docRef = await addDoc(collection(db, \"inventory\"), newMaterial);\r\n    setInventory((prev) => [\r\n      ...prev,\r\n      { id: docRef.id, ...newMaterial },\r\n    ]);\r\n    setNewMaterial({ name: \"\", quantity: 0 });\r\n    alert(\"Material added successfully!\");\r\n  } catch (error) {\r\n    console.error(\"Error adding material: \", error);\r\n  }\r\n};\r\nconst updateInventory = async (id, newQuantity) => {\r\n  try {\r\n    const docRef = doc(db, \"inventory\", id);\r\n    await updateDoc(docRef, { quantity: newQuantity });\r\n    setInventory((prev) =>\r\n      prev.map((item) =>\r\n        item.id === id ? { ...item, quantity: newQuantity } : item\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Error updating inventory: \", error);\r\n  }\r\n};\r\nconst deleteMaterial = async (id) => {\r\n  try {\r\n    await deleteDoc(doc(db, \"inventory\", id));\r\n    setInventory((prev) => prev.filter((item) => item.id !== id));\r\n    alert(\"Material deleted successfully!\");\r\n  } catch (error) {\r\n    console.error(\"Error deleting material: \", error);\r\n  }\r\n};\r\n\r\n    \r\n\r\n    const toggleReceiptDetails = (receiptId) => {\r\n        const updatedReceipts = receipts.map(receipt =>\r\n            receipt.id === receiptId ? { ...receipt, expanded: !receipt.expanded } : receipt\r\n        );\r\n        setReceipts(updatedReceipts);\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-dashboard container py-5\">\r\n          <div className=\" navbar navbar-expand-lg d-flex justify-content-between align-items-center mb-4 \">\r\n            <h1 className=\"text-primary\">\r\n            <i className=\"fas fa-user-shield fa-1x mb-3 me-3\"></i>\r\n             Admin Dashboard</h1>\r\n            <button onClick={handleLogout} className=\"btn btn-danger\">\r\n            <i className=\"fas fa-door-open me-2\"></i>\r\n              Logout\r\n            </button>\r\n          </div>\r\n    \r\n          <ul className=\"nav nav-pills mb-4 justify-content-center\">\r\n        {[\"subscribers\", \"receipts\", \"repairRequests\", \"createPlan\", \"removePlan\", \"createAccount\", \"installations\", \"inventory\"].map(\r\n          (tabName) => (\r\n            <li className=\"nav-item\" key={tabName}>\r\n              <button\r\n                className={`nav-link ${tab === tabName ? \"active\" : \"\"}`}\r\n                onClick={() => setTab(tabName)}\r\n              >\r\n                {tabName.charAt(0).toUpperCase() + tabName.slice(1)}{\" \"}\r\n                {tabName === \"receipts\" && (\r\n                  <span className=\"badge text-bg-secondary\">{receipts.length}</span>\r\n                )}\r\n                {tabName === \"repairRequests\" && (\r\n                  <span className=\"badge text-bg-secondary\">{repairRequests.length}</span>\r\n                )}\r\n                {tabName === \"installations\" && (\r\n                  <span className=\"badge text-bg-secondary\">{installations.length}</span>\r\n                )}\r\n              </button>\r\n            </li>\r\n          )\r\n        )}\r\n      </ul>\r\n      {tab === \"inventory\" && (\r\n  <div>\r\n    <h2 className=\"text-info mb-4\">Inventory Management</h2>\r\n\r\n    {loading ? (\r\n      <div class=\"d-flex justify-content-center\">\r\n      <div  class=\"spinner-border\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n    ) : (\r\n      <table className=\"table table-bordered shadow\">\r\n        <thead className=\"table-dark\">\r\n          <tr>\r\n            <th>Material</th>\r\n            <th>Quantity</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {inventory.map((item) => (\r\n            <tr key={item.id}>\r\n              <td>{item.name}</td>\r\n              <td>{item.quantity}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-success btn-sm me-2\"\r\n                  onClick={() => updateInventory(item.id, item.quantity + 1)}\r\n                >\r\n                  <i className=\"fas fa-plus\"></i>\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick={() => updateInventory(item.id, item.quantity - 1)}\r\n                >\r\n                  <i className=\"fas fa-minus\"></i>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    )}\r\n\r\n    {/* Add New Material */}\r\n    <h3 className=\"text-info mt-4\">Add New Material</h3>\r\n    <form onSubmit={handleAddMaterial}>\r\n      <div className=\"row g-3\">\r\n        <div className=\"col-md-6\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Material Name\"\r\n            value={newMaterial.name}\r\n            onChange={(e) =>\r\n              setNewMaterial({ ...newMaterial, name: e.target.value })\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Quantity\"\r\n            value={newMaterial.quantity}\r\n            onChange={(e) =>\r\n              setNewMaterial({\r\n                ...newMaterial,\r\n                quantity: parseInt(e.target.value, 10) || 0,\r\n              })\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n)}\r\n\r\n    \r\n{tab === \"subscribers\" && (\r\n  <div className=\"row\">\r\n    <h2 className=\"text-success\">Subscribers</h2>\r\n\r\n    {/* Search Input */}\r\n    <div className=\"search-container\">\r\n    \r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"&#x1F50E;&#xFE0E; Search\"\r\n        value={searchTerm || \"\"} // Ensure searchTerm is always defined\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n    </div>\r\n\r\n    {/* Debugging Logs */}\r\n    {console.log(\"Subscribers:\", subscribers)}\r\n    {console.log(\"Search Term:\", searchTerm)}\r\n    {console.log(\"Filtered Subscribers:\", filteredSubscribers)}\r\n\r\n    {/* Display Filtered Subscribers */}\r\n    {filteredSubscribers && filteredSubscribers.length > 0 ? (\r\n      filteredSubscribers.map((subscriber) => (\r\n        <div className=\"col-md-4 mb-3\" key={subscriber.id}>\r\n          <div className=\"card shadow border-success\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title text-primary\">{subscriber.name}</h5>\r\n              <p><strong>Email:</strong> {subscriber.email}</p>\r\n              <p><strong>Plan:</strong> {subscriber.plan}</p>\r\n              <p><strong>Contact Number:</strong> {subscriber.contactNumber}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))\r\n    ) : (\r\n      <div className=\"col-12\">\r\n        <p className=\"text-muted\">\r\n          {searchTerm\r\n            ? \"No subscribers match the search query.\"\r\n            : \"No subscribers available.\"}\r\n        </p>\r\n      </div>\r\n    )}\r\n  </div>\r\n)}\r\n\r\n\r\n\r\n{tab === \"repairRequests\" && (\r\n  <div>\r\n    <h2 className=\"text-primary mb-4\">Repair Requests</h2>\r\n    <div className=\"row\">\r\n      {repairRequests.map((request) => (\r\n        <div className=\"col-md-6 mb-3\" key={request.id}>\r\n          <div className=\"card shadow border-info\">\r\n            <img\r\n              src={request.imageUrl}\r\n              className=\"card-img-top repair-img\"\r\n              alt=\"Repair Evidence\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target={`#modal-${request.id}`}\r\n              style={{ maxHeight: \"200px\", objectFit: \"cover\", cursor: \"pointer\" }}\r\n            />\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title text-info\">\r\n                {request.reportedBy}\r\n              </h5>\r\n              <p>\r\n                <strong>Type:</strong> {request.repairType}\r\n              </p>\r\n              <p>\r\n                <strong>Details:</strong> {request.details}\r\n              </p>\r\n              <p>\r\n                <strong>Reported On: </strong>{\" \"}\r\n                {new Date(request.timestamp.seconds * 1000).toDateString()}\r\n              </p>\r\n              <p>\r\n                <strong>Reported by: </strong>{request.email}\r\n              </p>\r\n              {request.status !== \"Resolved\" && (\r\n                      <button\r\n                        className=\"btn btn-success\"\r\n                        onClick={() => handleResolveRepairRequest(request.id)}\r\n                      >\r\n                        Mark as Resolved\r\n                      </button>\r\n                    )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Modal for Image Preview */}\r\n          <div\r\n            className=\"modal fade\"\r\n            id={`modal-${request.id}`}\r\n            tabIndex=\"-1\"\r\n            aria-labelledby={`modalLabel-${request.id}`}\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id={`modalLabel-${request.id}`}>\r\n                    Repair Evidence\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  ></button>\r\n                </div>\r\n                <div className=\"modal-body text-center\">\r\n                  <img\r\n                    src={request.imageUrl}\r\n                    alt=\"Expanded Repair Evidence\"\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n\r\n          {tab === \"receipts\" && (\r\n        <div>\r\n          <h2 className=\"text-warning\">Receipts</h2>\r\n          <div className=\"row\">\r\n            {receipts.map((receipt) => (\r\n              <div className=\"col-md-6 mb-3\" key={receipt.id}>\r\n                <div className=\"card shadow\">\r\n                  <img\r\n                    src={receipt.receiptURL}\r\n                    className=\"card-img-top receipt-img\"\r\n                    alt=\"Receipt\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target={`#modal-${receipt.id}`}\r\n                    style={{ cursor: \"pointer\" }} // Add pointer cursor for clarity\r\n                  />\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-info\">\r\n                      {receipt.subscriberName}\r\n                    </h5>\r\n                    <p>Uploaded on: {new Date(receipt.timestamp.seconds * 1000).toDateString()}</p>\r\n                    <button\r\n                      className=\"btn btn-success me-3\"\r\n                      onClick={() => confirmReceipt(receipt.id)}\r\n                    >\r\n                      Accept\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => handleRejectReceipt(receipt.id)}\r\n                    >\r\n                      Reject\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Modal for Receipt Image */}\r\n                <div\r\n                  className=\"modal fade\"\r\n                  id={`modal-${receipt.id}`}\r\n                  tabIndex=\"-1\"\r\n                  aria-labelledby={`modalLabel-${receipt.id}`}\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  <div className=\"modal-dialog modal-dialog-centered modal-dialog-centered\">\r\n                    <div className=\"modal-content\">\r\n                      <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id={`modalLabel-${receipt.id}`}>\r\n                          Receipt from {receipt.subscriberName}\r\n                        </h5>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn-close\"\r\n                          data-bs-dismiss=\"modal\"\r\n                          aria-label=\"Close\"\r\n                        ></button>\r\n                      </div>\r\n                      <div className=\"modal-body text-center\">\r\n                        <img\r\n                          src={receipt.receiptURL}\r\n                          alt=\"Expanded Receipt\"\r\n                          className=\"img-fluid\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n    \r\n{tab === \"createPlan\" && (\r\n  <div>\r\n    {/* Success Alert */}\r\n    {showAlert && (\r\n      <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n        <strong>Success!</strong> Plan added successfully!\r\n      </div>\r\n    )}\r\n\r\n    <h2 className=\"text-info mb-4\">Create New Internet Plan</h2>\r\n    <form onSubmit={handleAddPlan} className=\"form-container shadow\">\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">Plan Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={newPlan.Name}\r\n          onChange={(e) => setNewPlan({ ...newPlan, Name: e.target.value })}\r\n          placeholder=\"Enter Plan Name\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">Speed (Mbps)</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          value={newPlan.Speed}\r\n          onChange={(e) => setNewPlan({ ...newPlan, Speed: e.target.value })}\r\n          placeholder=\"Enter Speed\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">Price (₱)</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          value={newPlan.Price}\r\n          onChange={(e) => setNewPlan({ ...newPlan, Price: e.target.value })}\r\n          placeholder=\"Enter Price in ₱\"\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Add Plan\r\n      </button>\r\n    </form>\r\n  </div>\r\n)}\r\n\r\n\r\n    \r\n          {tab === \"removePlan\" && (\r\n            <div>\r\n              {/* Success Alert */}\r\n                {showAlert && (\r\n                  <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                    <strong>Success!</strong> Plan removed successfully!\r\n                  </div>\r\n                )}\r\n                <h2 className=\"text-danger mb-4\">Remove Internet Plan</h2>\r\n              <div className=\"row\">\r\n                {plans.map((plan) => (\r\n                  <div className=\"col-md-4 mb-3\" key={plan.id}>\r\n                    <div className=\"card shadow border-danger\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title text-dark\">{plan.Name}</h5>\r\n                        <p>\r\n                          <strong>Speed:</strong> {plan.Speed} Mbps\r\n                        </p>\r\n                        <p>\r\n                          <strong>Price:</strong> ₱{plan.Price}\r\n                        </p>\r\n                        <button className=\"btn btn-danger\" onClick={() => handleRemovePlan(plan.id)}>Remove Plan</button>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n       {tab === \"createAccount\" && (\r\n  <div>\r\n    <h2 className=\"text-info mb-4\">Create Account</h2>\r\n    <div className=\"form-container\">\r\n      <form onSubmit={handleCreateAccount}>\r\n        {newEmployee.role === \"employee\" && (\r\n          <input\r\n            type=\"text\"\r\n            value={newEmployee.name}\r\n            onChange={(e) => setNewEmployee({ ...newEmployee, name: e.target.value })}\r\n            placeholder=\"Employee Name\"\r\n            required\r\n          />\r\n        )}\r\n\r\n        <input\r\n          type=\"email\"\r\n          value={newEmployee.email}\r\n          onChange={(e) => setNewEmployee({ ...newEmployee, email: e.target.value })}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          value={newEmployee.password}\r\n          onChange={(e) => setNewEmployee({ ...newEmployee, password: e.target.value })}\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n\r\n        <select\r\n          value={newEmployee.role}\r\n          onChange={(e) => setNewEmployee({ ...newEmployee, role: e.target.value })}\r\n        >\r\n          <option value=\"employee\">Employee</option>\r\n          <option value=\"admin\">Admin</option>\r\n        </select>\r\n\r\n        <button type=\"submit\">Create Account</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n{tab === \"installations\" && (\r\n    <div>\r\n        {showAlert && (\r\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                <strong>Success!</strong> Installation marked as complete!\r\n            </div>\r\n        )}\r\n        <h2 className=\"text-primary mb-4\">Installations</h2>\r\n\r\n        {installations.length === 0 ? (\r\n            <>\r\n                <p>No installations to show.</p>\r\n                {console.log(\"Installations state is empty:\", installations)}\r\n            </>\r\n        ) : (\r\n            installations.map(installation => {\r\n                console.log(\"Rendering installation:\", installation); // Log each installation\r\n\r\n                return (\r\n                    <div className=\"card\" key={installation.id}>\r\n                        <h3>{installation.subscriberName}</h3>\r\n                        <p>Plan: {installation.planName}</p>\r\n                        <p>Installation Date: {installation.installationDate.toDate().toString()}</p>\r\n                        <p>Priority: {installation.priority}</p>\r\n                        <button\r\n                            className=\"btn btn-success\"\r\n                            onClick={() => completeInstallation(installation.id)}\r\n                        >\r\n                            Mark Complete\r\n                        </button>\r\n                    </div>\r\n                );\r\n            })\r\n        )}\r\n    </div>\r\n)}\r\n\r\n\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default Admin;\r\n\r\n      \r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport { auth } from \"./firebase\"; // Import Firebase Auth instance\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthProvider to wrap the app and provide the auth state\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null); // Store user info\r\n  const [loading, setLoading] = useState(true); // Track loading state\r\n\r\n  useEffect(() => {\r\n    // Listen for Firebase Auth state changes\r\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n      if (firebaseUser) {\r\n        console.log(\"User is logged in:\", firebaseUser); // Debugging log\r\n        setUser(firebaseUser); // Set user from Firebase\r\n      } else {\r\n        console.log(\"No user is logged in\"); // Debugging log\r\n        setUser(null); // Clear user state\r\n      }\r\n      setLoading(false); // Done loading\r\n    });\r\n\r\n    // Cleanup listener on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Function to log out the user\r\n  const logout = async () => {\r\n    try {\r\n      await signOut(auth); // Firebase logout\r\n      setUser(null); // Clear user state\r\n      console.log(\"User successfully logged out\");\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to manually log in the user (you can pass in user data if needed)\r\n  const login = (firebaseUser) => {\r\n    setUser(firebaseUser); // Set user directly (this will be useful if you want to log in without using Firebase's onAuthStateChanged)\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {!loading && children} {/* Render children only after loading */}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use the AuthContext\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { auth } from \"./firebase\"; // Firebase auth instance\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\"; // Import custom styles if needed\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const { user } = useAuth(); // Access the current user\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(null); // Clear previous errors\r\n\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      console.log(\"Login successful:\", userCredential.user);\r\n      navigate(\"/Home\"); // Redirect to home page\r\n    } catch (err) {\r\n      console.error(\"Error during login:\", err);\r\n      setError(\"Failed to log in: \" + err.message);\r\n    }\r\n  };\r\n\r\n  // if (user) {\r\n  //   // If already logged in, redirect\r\n  //   navigate(\"/Home\");\r\n  // }\r\n\r\n  return (\r\n    <div className=\"container d-flex justify-content-center align-items-center vh-100\">\r\n  <div className=\"card shadow-lg p-4\" style={{ maxWidth: \"400px\", width: \"100%\" }}>\r\n    {/* Back Icon */}\r\n    <div\r\n      className=\"mb-3\"\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"20px\",\r\n        left: \"20px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={() => window.history.back()}\r\n    >\r\n      <i className=\"fas fa-arrow-left fa-lg text-secondary\"></i>\r\n    </div>\r\n\r\n    \r\n\r\n    <h1 className=\"text-center mb-4 text-primary\">\r\n      {/* Centered User Icon */}\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"10vh\",\r\n      }}\r\n    >\r\n      <i className=\"fas fa-user-check fa-1x mb-3\"></i>\r\n    </div>Login</h1>\r\n    <form onSubmit={handleLogin}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"email\" className=\"form-label\">\r\n          Email\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          className=\"form-control\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Enter your email\"\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"password\" className=\"form-label\">\r\n          Password\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          className=\"form-control\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Enter your password\"\r\n          required\r\n        />\r\n      </div>\r\n      {error && <p className=\"text-danger text-center\">{error}</p>}\r\n      <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n        Login\r\n      </button>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { db, storage } from \"./firebase\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  onSnapshot,\r\n  addDoc,\r\n  Timestamp,\r\n} from \"firebase/firestore\";\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\n\r\nfunction Repair() {\r\n  const { user } = useAuth();\r\n  const [repairRequests, setRepairRequests] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [repairType, setRepairType] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  // Fetch repair requests in real-time\r\n  useEffect(() => {\r\n    const repairRequestsRef = collection(db, \"RepairRequests\");\r\n    const q = query(repairRequestsRef, where(\"userId\", \"==\", user.uid));\r\n\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const repairs = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setRepairRequests(repairs);\r\n    });\r\n\r\n    return () => unsubscribe(); // Cleanup listener on component unmount\r\n  }, [user.uid]);\r\n\r\n  const handleAddRequest = () => {\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setShowForm(false);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!repairType || !details) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setUploading(true);\r\n\r\n      let imageUrl = null;\r\n\r\n      // Upload the image to Firebase Storage if provided\r\n      if (image) {\r\n        const storageRef = ref(storage, `repair-images/${user.uid}-${Date.now()}`);\r\n        const snapshot = await uploadBytes(storageRef, image);\r\n        imageUrl = await getDownloadURL(snapshot.ref);\r\n      }\r\n\r\n      // Save the repair request to Firestore\r\n      const repairRequestsRef = collection(db, \"RepairRequests\");\r\n      await addDoc(repairRequestsRef, {\r\n        userId: user.uid,\r\n        email: user.email,\r\n        repairType,\r\n        details,\r\n        imageUrl,\r\n        timestamp: Timestamp.fromDate(new Date()),\r\n      });\r\n\r\n      alert(\"Repair request submitted successfully!\");\r\n\r\n      // Reset form fields and navigate back to the list\r\n      setRepairType(\"\");\r\n      setDetails(\"\");\r\n      setImage(null);\r\n      setShowForm(false);\r\n    } catch (error) {\r\n      console.error(\"Error submitting repair request:\", error);\r\n      alert(\"Failed to submit repair request. Please try again.\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {showForm ? (\r\n        <div className=\"d-flex flex-column align-items-center justify-content-center vh-100\">\r\n          <div\r\n            className=\"card shadow-lg p-4\"\r\n            style={{ maxWidth: \"400px\", width: \"100%\" }}\r\n          >\r\n            {/* Back Icon */}\r\n            <div\r\n            className=\"mb-3\"\r\n            style={{\r\n                position: \"absolute\",\r\n                top: \"20px\",\r\n                left: \"20px\",\r\n                cursor: \"pointer\",\r\n            }}\r\n            onClick={handleBack}\r\n            >\r\n            <i className=\"fas fa-arrow-left fa-lg text-secondary\"></i>\r\n            </div>\r\n            \r\n            <h2 className=\"text-center text-primary mb-4\">\r\n              {/* Centered User Icon */}\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"10vh\",\r\n                }}\r\n              >\r\n                <i className=\"fas fa-wrench fa-1x mb-3\"></i>\r\n              </div>\r\n              Add Repair Request</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"repairType\" className=\"form-label\">\r\n                  Type of Repair\r\n                </label>\r\n                <select\r\n                  id=\"repairType\"\r\n                  className=\"form-select\"\r\n                  value={repairType}\r\n                  onChange={(e) => setRepairType(e.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"\">-- Select a Repair Type --</option>\r\n                  <option value=\"Internet Connection\">Internet Connection</option>\r\n                  <option value=\"Router Issue\">Router Issue</option>\r\n                  <option value=\"Slow Speed\">Slow Speed</option>\r\n                  <option value=\"Billing Issue\">Billing Issue</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"details\" className=\"form-label\">\r\n                  Details\r\n                </label>\r\n                <textarea\r\n                  id=\"details\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Provide details about the issue...\"\r\n                  value={details}\r\n                  onChange={(e) => setDetails(e.target.value)}\r\n                  rows={4}\r\n                  required\r\n                ></textarea>\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"image\" className=\"form-label\">\r\n                  Upload Image (Optional)\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"image\"\r\n                  className=\"form-control\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleFileChange}\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100\"\r\n                disabled={uploading}\r\n              >\r\n                {uploading ? \"Submitting...\" : \"Submit Request\"}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <div>\r\n              {/* Back Icon */}\r\n                <div\r\n                className=\"mb-3\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: \"20px\",\r\n                    left: \"20px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n                onClick={() => window.history.back()}\r\n                >\r\n                <i className=\"fas fa-arrow-left fa-lg text-secondary\"></i>\r\n                </div>\r\n              <h1 className=\"text-primary d-inline\"> \r\n              <i className=\"fas fa-wrench fa-1x mb-3 me-3\"></i>\r\n              My Repair Requests</h1>\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={handleAddRequest}\r\n            >\r\n                <i className=\"fas fa-plus fa-sm me-1\"></i>\r\n              Add Request\r\n            </button>\r\n          </div>\r\n          <div className=\"row\">\r\n            {repairRequests.map((request) => (\r\n              <div key={request.id} className=\"col-md-4 mb-4\">\r\n                <div className=\"card\">\r\n                  {request.imageUrl && (\r\n                    <img\r\n                      src={request.imageUrl}\r\n                      alt=\"Repair\"\r\n                      className=\"card-img-top\"\r\n                      style={{ height: \"200px\", objectFit: \"cover\" }}\r\n                    />\r\n                  )}\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{request.repairType}</h5>\r\n                    <p className=\"card-text\">{request.details}</p>\r\n                    <p className=\"text-muted\">\r\n                      Submitted on: {new Date(request.timestamp.toDate()).toLocaleDateString()}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Repair;\r\n","import React, { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { db } from \"./firebase\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport \"./UpdateInfo.css\";\r\nimport { collection, query, where, getDocs, updateDoc } from \"firebase/firestore\";\r\n\r\nfunction UpdateInfo() {\r\n    const { user } = useAuth(); // Fetch user from AuthContext\r\n  const location = useLocation(); // Access state passed from Home\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [contactNumber, setContactNumber] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  const uid = location.state?.uid; // Get uid from navigation state\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (!name && !contactNumber && !address) {\r\n      alert(\"Please fill at least one field to update.\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      // Query the Subscribers collection for the document with the matching UID\r\n      const subscribersRef = collection(db, \"Subscribers\");\r\n      const q = query(subscribersRef, where(\"uid\", \"==\", user.uid));\r\n      const querySnapshot = await getDocs(q);\r\n  \r\n      if (!querySnapshot.empty) {\r\n        // Get the document ID\r\n        const docRef = querySnapshot.docs[0].ref;\r\n  \r\n        // Prepare updates\r\n        const updates = {};\r\n        if (name) updates.name = name;\r\n        if (contactNumber) updates.contactNumber = contactNumber;\r\n        if (address) updates.address = address;\r\n  \r\n        // Update the document\r\n        await updateDoc(docRef, updates);\r\n  \r\n        alert(\"Information updated successfully!\");\r\n        navigate(\"/home\");\r\n      } else {\r\n        alert(\"No subscriber found with the provided UID. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating info:\", error.message);\r\n      alert(\"Failed to update information. Please try again later.\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"update-info-container\">\r\n        {/* Centered User Icon */}\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"10vh\",\r\n      }}\r\n    >\r\n      <i className=\"fas fa-user-pen fa-2x mb-3\"></i>\r\n    </div>\r\n      <h1>Update Your Information</h1>\r\n      <form onSubmit={handleUpdate}>\r\n        {/* Back Icon */}\r\n        <div\r\n          className=\"mb-3\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"20px\",\r\n            left: \"20px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          <i className=\"fas fa-arrow-left fa-lg text-secondary\"></i>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"contactNumber\">Contact Number</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"contactNumber\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter your contact number\"\r\n            value={contactNumber}\r\n            onChange={(e) => setContactNumber(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"address\">Address</label>\r\n          <textarea\r\n            id=\"address\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter your address\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></textarea>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Apply Changes\r\n        </button>\r\n      </form>\r\n      <button\r\n        className=\"btn btn-secondary mt-3\"\r\n        onClick={() => {\r\n          // Clear form fields and navigate to home\r\n          setName(\"\");\r\n          setContactNumber(\"\");\r\n          setAddress(\"\");\r\n          \r\n        }}\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateInfo;\r\n","import React, { useState } from \"react\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nfunction Signup() {\r\n  const location = useLocation();\r\n  const { selectedPlan } = location.state || {};\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [contactNumber, setContactNumber] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [acceptTerms, setAcceptTerms] = useState(false); // New state for terms\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth();\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!selectedPlan || !selectedPlan.Name || !selectedPlan.Price || !selectedPlan.Speed) {\r\n      setError(\"Please select a valid plan.\");\r\n      return;\r\n    }\r\n\r\n    if (!acceptTerms) {\r\n      setError(\"You must accept the terms and conditions to sign up.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      const user = userCredential.user;\r\n\r\n      const signupDate = new Date();\r\n\r\n      await addDoc(collection(db, \"Subscribers\"), {\r\n        uid: user.uid,\r\n        name,\r\n        email,\r\n        contactNumber,\r\n        address,\r\n        plan: selectedPlan.Name,\r\n        planPrice: selectedPlan.Price,\r\n        planSpeed: selectedPlan.Speed,\r\n        signupDate,\r\n      });\r\n\r\n      login(user);\r\n\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setContactNumber(\"\");\r\n      setAddress(\"\");\r\n      setAcceptTerms(false); // Reset terms checkbox\r\n\r\n      alert(\"Account created successfully!\");\r\n      navigate(\"/Payment\", { state: { selectedPlan } });\r\n    } catch (err) {\r\n      setError(\"Failed to sign up: \" + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card shadow-lg\" style={{ width: \"100%\", margin: \"0 auto\" }}>\r\n            <div className=\"card-body\">\r\n              <div\r\n                className=\"mb-3\"\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"20px\",\r\n                  left: \"20px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => window.history.back()}\r\n              >\r\n                <i className=\"fas fa-arrow-left fa-lg text-secondary\"></i>\r\n              </div>\r\n              <h2 className=\"card-title text-center mb-4\">\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"10vh\",\r\n                  }}\r\n                >\r\n                  <i className=\"fas fa-user-plus fa-1x mb-3\"></i>\r\n                </div>\r\n                Create Your Account\r\n              </h2>\r\n\r\n              <form onSubmit={handleSignup}>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Full Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    placeholder=\"Enter your full name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Email Address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Enter your email\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Enter your password\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Contact Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={contactNumber}\r\n                    onChange={(e) => setContactNumber(e.target.value)}\r\n                    placeholder=\"Enter your contact number\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Home Address</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={address}\r\n                    onChange={(e) => setAddress(e.target.value)}\r\n                    placeholder=\"Enter your home address\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {/* Terms and Conditions Checkbox */}\r\n                <div className=\"mb-3 form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    id=\"termsCheck\"\r\n                    checked={acceptTerms}\r\n                    onChange={(e) => setAcceptTerms(e.target.checked)}\r\n                  />\r\n                  <label className=\"form-label\" htmlFor=\"termsCheck\">\r\n                  &nbsp; I accept the {\" \"} \r\n                    <a href=\"/terms-and-conditions\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                     Terms and Conditions\r\n                    </a>\r\n                  </label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n                  Sign Up\r\n                </button>\r\n              </form>\r\n\r\n              {error && <p className=\"text-danger text-center mt-3\">{error}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          {selectedPlan && (\r\n            <div className=\"card shadow-lg mt-4\" style={{ width: \"100%\", margin: \"0 auto\" }}>\r\n              <div className=\"card-body\">\r\n                <h3 className=\"card-title text-center\">Selected Plan</h3>\r\n                <p>\r\n                  <strong>Name:</strong> {selectedPlan.Name}\r\n                </p>\r\n                <p>\r\n                  <strong>Speed:</strong> {selectedPlan.Speed} Mbps\r\n                </p>\r\n                <p>\r\n                  <strong>Price:</strong> ₱{selectedPlan.Price}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { storage, db } from \"./firebase\";\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport { collection, addDoc, serverTimestamp, doc, getDoc } from \"firebase/firestore\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"./Payment.css\";\r\n\r\nfunction Modal({ isOpen, onClose, content, isLoading, isImage }) {\r\n  if (!isOpen) return null;\r\n\r\n  // Close modal when clicking outside the modal content\r\n  const handleOverlayClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={handleOverlayClick}>\r\n      <div className=\"modal-content\">\r\n        {isLoading ? (\r\n          <div className=\"loading-spinner\">Loading...</div>\r\n        ) : isImage ? (\r\n          <div className=\"image-modal\">\r\n            <img src={content} alt=\"GCash QR Code\" className=\"modal-image\" />\r\n            <p>Scan the QR code to make a payment.</p>\r\n            <button onClick={onClose} className=\"close-button\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <p>{content}</p>\r\n            <button onClick={onClose} className=\"close-button\">\r\n              Close\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Payment() {\r\n  const location = useLocation();\r\n  const { selectedPlan } = location.state || {}; // Ensure selectedPlan is passed\r\n  const { user } = useAuth();\r\n  const [receipt, setReceipt] = useState(null);\r\n  const [previewURL, setPreviewURL] = useState(null);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isImageModal, setIsImageModal] = useState(false);\r\n  const [subscriberName, setSubscriberName] = useState(null);\r\n  const [gcashImageURL, setGCashImageURL] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchSubscriberName = async () => {\r\n      try {\r\n        const subscriberDocRef = doc(db, \"Subscribers\", user.uid);\r\n        const subscriberDocSnap = await getDoc(subscriberDocRef);\r\n\r\n        if (subscriberDocSnap.exists()) {\r\n          const subscriberData = subscriberDocSnap.data();\r\n          setSubscriberName(subscriberData.name);\r\n        } else {\r\n          setSubscriberName(user.displayName || user.email);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching subscriber name:\", err.message);\r\n        setSubscriberName(user.displayName || user.email);\r\n      }\r\n    };\r\n\r\n    const fetchGCashImage = async () => {\r\n      try {\r\n        const gcashRef = ref(storage, \"GCASH.jpg\");\r\n        const url = await getDownloadURL(gcashRef);\r\n        setGCashImageURL(url);\r\n      } catch (err) {\r\n        console.error(\"Error fetching GCash image URL:\", err.message);\r\n      }\r\n    };\r\n\r\n    fetchSubscriberName();\r\n    fetchGCashImage();\r\n  }, [user]);\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      if (!file.type.startsWith(\"image/\")) {\r\n        setModalContent(\"Please upload a valid image file.\");\r\n        setIsModalOpen(true);\r\n        return;\r\n      }\r\n      if (file.size > 2 * 1024 * 1024) {\r\n        setModalContent(\"File size must be less than 2MB.\");\r\n        setIsModalOpen(true);\r\n        return;\r\n      }\r\n\r\n      setReceipt(file);\r\n      const reader = new FileReader();\r\n      reader.onload = () => setPreviewURL(reader.result);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!receipt) {\r\n      setModalContent(\"Please select a receipt image.\");\r\n      setIsModalOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (!selectedPlan || !selectedPlan.Name || !selectedPlan.Price) {\r\n      setModalContent(\"Missing plan data. Please select a valid plan.\");\r\n      setIsModalOpen(true);\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setIsModalOpen(true);\r\n\r\n    try {\r\n      const receiptRef = ref(storage, `receipts/${receipt.name}`);\r\n      await uploadBytes(receiptRef, receipt);\r\n\r\n      const downloadURL = await getDownloadURL(receiptRef);\r\n\r\n      await addDoc(collection(db, \"Receipts\"), {\r\n        subscriberName: subscriberName || user.email,\r\n        planName: selectedPlan.Name,\r\n        planPrice: selectedPlan.Price,\r\n        receiptURL: downloadURL,\r\n        timestamp: serverTimestamp(),\r\n      });\r\n\r\n      setModalContent(\"Receipt uploaded successfully! Redirecting...\");\r\n      setReceipt(null);\r\n      setPreviewURL(null);\r\n      setTimeout(() => navigate(\"/home\"), 2000);\r\n    } catch (err) {\r\n      setModalContent(\"Failed to upload receipt: \" + err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGCashImageClick = () => {\r\n    setModalContent(gcashImageURL);\r\n    setIsImageModal(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-page\">\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onClose={() => {\r\n          setIsModalOpen(false);\r\n          setIsImageModal(false);\r\n        }}\r\n        content={modalContent}\r\n        isLoading={isLoading}\r\n        isImage={isImageModal}\r\n      />\r\n\r\n      <div className=\"payment-card\">\r\n        <h2>\r\n          <div className=\"icon-container\">\r\n            <i className=\"fas fa-money-check-dollar\"></i>\r\n          </div>\r\n          Make Your Payment\r\n        </h2>\r\n\r\n        {/* Display GCash Image */}\r\n        {gcashImageURL && (\r\n          <div className=\"gcash-image-container\">\r\n            <h3>Pay via GCash</h3>\r\n            <img\r\n              src={gcashImageURL}\r\n              alt=\"GCash QR Code\"\r\n              className=\"gcash-image\"\r\n              onClick={handleGCashImageClick}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"plan-details\">\r\n          <h3>Selected Plan</h3>\r\n          <p>\r\n            <strong>Name:</strong> {selectedPlan?.Name || \"No plan selected\"}\r\n          </p>\r\n          <p>\r\n            <strong>Price:</strong> ₱{selectedPlan?.Price || \"N/A\"}\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleUpload} className=\"payment-form\">\r\n          {receipt && (\r\n            <div className=\"preview-container\">\r\n              <p className=\"receipt-details\">Selected File: {receipt.name}</p>\r\n              <img src={previewURL} alt=\"Receipt Preview\" className=\"receipt-preview\" />\r\n            </div>\r\n          )}\r\n          <label htmlFor=\"receipt-upload\" className=\"file-input-label\">\r\n            Upload Receipt\r\n          </label>\r\n          <input\r\n            id=\"receipt-upload\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleFileChange}\r\n            hidden\r\n          />\r\n          <button type=\"submit\" className=\"upload-button\" disabled={isLoading}>\r\n            {isLoading ? \"Uploading...\" : \"Submit\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Payment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { db } from \"./firebase\";\r\nimport { collection, query, where, onSnapshot, getDocs } from \"firebase/firestore\";\r\nimport { signOut } from \"firebase/auth\";\r\nimport { auth } from \"./firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Home.css\"; // Import custom styles\r\n\r\nfunction Home() {\r\n  const { user } = useAuth(); // Fetch user from AuthContext\r\n  const [subscriberData, setSubscriberData] = useState(null);\r\n  const [loading, setLoading] = useState(true); // Handle loading state\r\n  const [showDropdown, setShowDropdown] = useState(false); // State for dropdown\r\n  const [rejectionReason, setRejectionReason] = useState(\"\"); // State for rejection reason\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    let unsubscribe;\r\n\r\n    const fetchSubscriberData = async () => {\r\n      if (user?.uid) {\r\n        console.log(\"Fetching subscriber data for UID:\", user.uid);\r\n\r\n        try {\r\n          const subscribersRef = collection(db, \"Subscribers\");\r\n          const q = query(subscribersRef, where(\"uid\", \"==\", user.uid));\r\n\r\n          // Set up real-time listener\r\n          unsubscribe = onSnapshot(q, async (querySnapshot) => {\r\n            if (!querySnapshot.empty) {\r\n              const docData = querySnapshot.docs[0].data();\r\n              console.log(\"Subscriber data fetched:\", docData);\r\n\r\n              const email = docData.email;\r\n\r\n              // Check status from related collections\r\n              const completedInstallationsRef = collection(db, \"CompletedInstallations\");\r\n              const completedInstallationsQuery = query(completedInstallationsRef, where(\"subscriberName\", \"==\", email));\r\n\r\n              const rejectedReceiptsRef = collection(db, \"RejectedReceipts\");\r\n              const rejectedReceiptsQuery = query(rejectedReceiptsRef, where(\"subscriberName\", \"==\", email));\r\n\r\n              let installationStatus = \"Pending\"; // Default status\r\n              let reason = \"\"; // Default reason\r\n\r\n              const [completedInstallationsSnapshot, rejectedReceiptsSnapshot] = await Promise.all([\r\n                getDocs(completedInstallationsQuery),\r\n                getDocs(rejectedReceiptsQuery),\r\n              ]);\r\n\r\n              if (!rejectedReceiptsSnapshot.empty) {\r\n                installationStatus = \"Rejected\";\r\n                reason = rejectedReceiptsSnapshot.docs[0].data()?.rejectionReason || \"No reason provided\";\r\n                console.log(\"Internet status set to Rejected, Reason:\", reason);\r\n              } else if (!completedInstallationsSnapshot.empty) {\r\n                installationStatus = \"Connected\";\r\n                console.log(\"Internet status set to Connected\");\r\n              }\r\n\r\n              // Update states with installation status and reason\r\n              setSubscriberData({\r\n                ...docData,\r\n                installationStatus,\r\n              });\r\n              setRejectionReason(reason);\r\n            } else {\r\n              console.warn(\"No subscriber data found for this user.\");\r\n            }\r\n            setLoading(false);\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Error fetching subscriber data:\", error);\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchSubscriberData();\r\n\r\n    // Cleanup listener on component unmount\r\n    return () => {\r\n      if (unsubscribe) unsubscribe();\r\n    };\r\n  }, [user]);\r\n\r\n  const handleRetryPayment = () => {\r\n    if (subscriberData) {\r\n      try {\r\n        if (!subscriberData.plan || !subscriberData.planPrice) {\r\n          alert(\"Plan data is missing. Please contact support.\");\r\n          return;\r\n        }\r\n\r\n        navigate(\"/payment\", {\r\n          state: {\r\n            selectedPlan: {\r\n              Name: subscriberData.plan,\r\n              Speed: subscriberData.planSpeed,\r\n              Price: subscriberData.planPrice,\r\n            },\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error during payment retry:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAskForRepair = () => {\r\n    navigate(\"/repair\");\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      alert(\"Successfully logged out!\");\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.error(\"Failed to log out:\", err.message);\r\n    }\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setShowDropdown((prev) => !prev);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"welcome-card\">\r\n        <h1>Welcome to Your Home Page</h1>\r\n        {subscriberData ? (\r\n          <>\r\n            <h2>\r\n              Hello, <span>{subscriberData.name || \"Subscriber\"}!</span>\r\n            </h2>\r\n            <p>Thank you for being a valued subscriber. Here's your account summary:</p>\r\n          </>\r\n        ) : (\r\n          <p>No subscriber data found. Please contact support.</p>\r\n        )}\r\n      </div>\r\n\r\n      {subscriberData && (\r\n        <div className=\"account-details\">\r\n          <div\r\n            className=\"card-header\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              height: \"10vh\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <i className=\"fas fa-user fa-2x\"></i>\r\n\r\n            {/* Settings Button */}\r\n            <div\r\n              className=\"settings-dropdown\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 0,\r\n                right: 0,\r\n                margin: \"10px\",\r\n              }}\r\n            >\r\n              <button\r\n                className=\"btn btn-secondary dropdown-toggle\"\r\n                onClick={toggleDropdown}\r\n              >\r\n                <i className=\"fas fa-cog\"></i>\r\n              </button>\r\n              {showDropdown && (\r\n                <div className=\"dropdown-menu show\">\r\n                  <button className=\"dropdown-item\" onClick={handleAskForRepair}>\r\n                    Repair\r\n                  </button>\r\n                  <button\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => navigate(\"/updateinfo\", { state: { uid: user.uid } })} // Add navigation\r\n                  >\r\n                    Update Info\r\n                  </button>\r\n                  <button\r\n                    className=\"dropdown-item\"\r\n                    onClick={() => navigate(\"/updateplan\")} // Add navigation\r\n                  >\r\n                    Update Plan\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <h3>Internet Status: {subscriberData.installationStatus}</h3>\r\n          {subscriberData.installationStatus === \"Rejected\" && (\r\n            <p><strong>Reason for Rejection:</strong> {rejectionReason}</p>\r\n          )}\r\n          <ul>\r\n            <li>\r\n              <strong>Subscription Plan:</strong> {subscriberData.plan || \"N/A\"}\r\n            </li>\r\n            <li>\r\n              <strong>Price:</strong> {subscriberData.planPrice || \"N/A\"}\r\n            </li>\r\n            <li>\r\n              <strong>Speed:</strong> {subscriberData.planSpeed || \"N/A\"}\r\n            </li>\r\n            <li>\r\n              <strong>Contact Number:</strong> {subscriberData.contactNumber || \"N/A\"}\r\n            </li>\r\n            <li>\r\n              <strong>Address:</strong> {subscriberData.address || \"N/A\"}\r\n            </li>\r\n            <li>\r\n              <strong>Signup Date:</strong>{\" \"}\r\n              {subscriberData.signupDate\r\n                ? new Date(subscriberData.signupDate.seconds * 1000).toLocaleDateString()\r\n                : \"N/A\"}\r\n            </li>\r\n          </ul>\r\n\r\n          {subscriberData.installationStatus === \"Rejected\" && (\r\n            <button className=\"btn btn-warning\" onClick={handleRetryPayment}>\r\n              Retry Payment\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <button className=\"logout-button\" onClick={handleLogout}>\r\n        <i className=\"fas fa-door-open me-2\"></i>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Plans from './Plans';\nimport AdminLogin from './AdminLogin';\nimport Admin from './Admin';\nimport Login from './login';\nimport Repair from './Repair';\nimport UpdateInfo from \"./UpdateInfo\";\nimport Signup from './signup';\nimport Payment from './Payment';\nimport Home from './Home'; // Import the new Home component\nimport { AuthProvider } from './AuthContext'; // Import the AuthProvider\nimport './App.css'; // Import your custom CSS for styling\n\nconst App = () => {\n    return (\n        <AuthProvider>\n            <Router>\n                <Routes>\n                    <Route path=\"/Login\" element={<Login />} /> \n                    <Route path=\"/updateinfo\" element={<UpdateInfo />} />\n                    <Route path=\"/repair\" element={<Repair />} /> \n                    <Route path=\"/Payment\" element={<Payment />} />\n                    <Route path=\"/signup\" element={<Signup />} />\n                    <Route path=\"/\" element={<Plans />} />\n                    <Route path=\"/admin-login\" element={<AdminLogin />} />\n                    <Route path=\"/admin\" element={<Admin />} />\n                    <Route path=\"/home\" element={<Home />} /> {/* Add the Home route */}\n                </Routes>\n            </Router>\n        </AuthProvider>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport 'bootstrap/dist/js/bootstrap.bundle.min'; // Import Bootstrap JS\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}